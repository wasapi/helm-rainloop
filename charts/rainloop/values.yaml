replicaCount: 1

image:
  repository: hardware/rainloop
  tag: latest
  pullPolicy: IfNotPresent

container:
  port: 8888
  volumes:
    data:
      path: /rainloop/data

service:
  type: ClusterIP
  port: 80
  targetPort: 8888

runtimeClassName:

priorityClassName:

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  pathType: Prefix
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

args: []

env: []
  # - name: UID
  #   value: "991"
  # - name: GID
  #   value: "991"
  # - name: UPLOAD_MAX_SIZE
  #   value: "25M"

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## mariadb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 8Gi

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}

posecurityContext: {}

deployment:
  ## Add annotations to the deployment
  ## Useful for using something like stash to backup data (https://stash.run/docs/v0.9.0-rc.0/guides/latest/auto-backup/workload/)
  annotations: {}  

serviceAccount:
  create: true
  name: rainloop  
